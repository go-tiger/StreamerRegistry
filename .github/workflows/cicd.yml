name: CI/CD

on:
  push:
    branches: main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 레포 체크아웃
        uses: actions/checkout@main

      - name: Yarn 설치
        run: npm install -g yarn

      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@master

      - name: GitHub Container registry 로그인
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{secrets.GHCR_TOKEN}}

      - name: 빌드 및 푸시
        uses: docker/build-push-action@master
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64, linux/arm64
          tags: ghcr.io/${{github.repository_owner}}/streamer-registry:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 레포 체크아웃
        uses: actions/checkout@main

      - name: .env 생성
        env:
          SECRETS_JSON: ${{ toJson(secrets) }}
        run: |
          echo "$SECRETS_JSON" | jq -r 'to_entries | map(select(.key | startswith("ENV"))) | map("\(.key)=\(.value|tostring)") | .[]' > .env

      - name: .env 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: .env
          target: ${{ secrets.SERVER_PATH }}/site/StreamerRegistry
          overwrite: true

      - name: 서버 접속
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -euo pipefail

            cd ${{ secrets.SERVER_PATH }}/site/StreamerRegistry

            # Docker Hub 로그인
            echo ${{secrets.GHCR_TOKEN}} | docker login ghcr.io -u ${{github.repository_owner}} --password-stdin

            # 이미지 풀링
            docker pull ghcr.io/${{github.repository_owner}}/streamer-registry:latest

            NET_NAME="gotiger_default"
            SVC="streamer-registry"
            ACTIVE_ALIAS="${SVC}-active"

            # 현재 떠있는 쪽 판단
            if docker ps --format '{{.Names}}' | grep -q "^${SVC}-blue$"; then
              NEW="green"
              OLD="blue"
            else
              NEW="blue"
              OLD="green"
            fi

            docker-compose up -d "${SVC}-${NEW}"

            # 새 컨테이너에 active alias 부여 (기존 alias와 공존 가능)
            docker network connect --alias "${ACTIVE_ALIAS}" "${NET_NAME}" "${SVC}-${NEW}" 2>/dev/null || true

            # nginx DNS 캐시 즉시 갱신
            docker exec nginx nginx -s reload || true

            # 이전 컨테이너에서 active alias 제거: disconnect → 다시 connect(별칭 없이)
            docker network disconnect "${NET_NAME}" "${SVC}-${OLD}" 2>/dev/null || true
            docker network connect    "${NET_NAME}" "${SVC}-${OLD}" 2>/dev/null || true

            # 이전 컨테이너 정리
            docker compose stop "${SVC}-${OLD}"
            docker compose rm -f "${SVC}-${OLD}"
